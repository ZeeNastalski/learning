// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: launcher/PairRequest.proto

#ifndef PROTOBUF_INCLUDED_launcher_2fPairRequest_2eproto
#define PROTOBUF_INCLUDED_launcher_2fPairRequest_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "launcher/Descriptors.pb.h"
#include "networking/NetworkEndPoint.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_launcher_2fPairRequest_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_launcher_2fPairRequest_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_launcher_2fPairRequest_2eproto();
namespace zl {
namespace proto {
namespace launcher {
class PairRequest;
class PairRequestDefaultTypeInternal;
extern PairRequestDefaultTypeInternal _PairRequest_default_instance_;
class PairRequestResponse;
class PairRequestResponseDefaultTypeInternal;
extern PairRequestResponseDefaultTypeInternal _PairRequestResponse_default_instance_;
}  // namespace launcher
}  // namespace proto
}  // namespace zl
namespace google {
namespace protobuf {
template<> ::zl::proto::launcher::PairRequest* Arena::CreateMaybeMessage<::zl::proto::launcher::PairRequest>(Arena*);
template<> ::zl::proto::launcher::PairRequestResponse* Arena::CreateMaybeMessage<::zl::proto::launcher::PairRequestResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace zl {
namespace proto {
namespace launcher {

// ===================================================================

class PairRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zl.proto.launcher.PairRequest) */ {
 public:
  PairRequest();
  virtual ~PairRequest();

  PairRequest(const PairRequest& from);

  inline PairRequest& operator=(const PairRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PairRequest(PairRequest&& from) noexcept
    : PairRequest() {
    *this = ::std::move(from);
  }

  inline PairRequest& operator=(PairRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PairRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PairRequest* internal_default_instance() {
    return reinterpret_cast<const PairRequest*>(
               &_PairRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PairRequest* other);
  friend void swap(PairRequest& a, PairRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PairRequest* New() const final {
    return CreateMaybeMessage<PairRequest>(nullptr);
  }

  PairRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PairRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PairRequest& from);
  void MergeFrom(const PairRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PairRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .zl.proto.launcher.ClientDescriptor ClientDescriptor = 1;
  bool has_clientdescriptor() const;
  void clear_clientdescriptor();
  static const int kClientDescriptorFieldNumber = 1;
  const ::zl::proto::launcher::ClientDescriptor& clientdescriptor() const;
  ::zl::proto::launcher::ClientDescriptor* release_clientdescriptor();
  ::zl::proto::launcher::ClientDescriptor* mutable_clientdescriptor();
  void set_allocated_clientdescriptor(::zl::proto::launcher::ClientDescriptor* clientdescriptor);

  // @@protoc_insertion_point(class_scope:zl.proto.launcher.PairRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::zl::proto::launcher::ClientDescriptor* clientdescriptor_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_launcher_2fPairRequest_2eproto;
};
// -------------------------------------------------------------------

class PairRequestResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zl.proto.launcher.PairRequestResponse) */ {
 public:
  PairRequestResponse();
  virtual ~PairRequestResponse();

  PairRequestResponse(const PairRequestResponse& from);

  inline PairRequestResponse& operator=(const PairRequestResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PairRequestResponse(PairRequestResponse&& from) noexcept
    : PairRequestResponse() {
    *this = ::std::move(from);
  }

  inline PairRequestResponse& operator=(PairRequestResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PairRequestResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PairRequestResponse* internal_default_instance() {
    return reinterpret_cast<const PairRequestResponse*>(
               &_PairRequestResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(PairRequestResponse* other);
  friend void swap(PairRequestResponse& a, PairRequestResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PairRequestResponse* New() const final {
    return CreateMaybeMessage<PairRequestResponse>(nullptr);
  }

  PairRequestResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PairRequestResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PairRequestResponse& from);
  void MergeFrom(const PairRequestResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PairRequestResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .zl.proto.launcher.ServerDescriptor ServerDescriptor = 1;
  bool has_serverdescriptor() const;
  void clear_serverdescriptor();
  static const int kServerDescriptorFieldNumber = 1;
  const ::zl::proto::launcher::ServerDescriptor& serverdescriptor() const;
  ::zl::proto::launcher::ServerDescriptor* release_serverdescriptor();
  ::zl::proto::launcher::ServerDescriptor* mutable_serverdescriptor();
  void set_allocated_serverdescriptor(::zl::proto::launcher::ServerDescriptor* serverdescriptor);

  // .zl.proto.networking.NetworkEndPoint LocalEndPoint = 2;
  bool has_localendpoint() const;
  void clear_localendpoint();
  static const int kLocalEndPointFieldNumber = 2;
  const ::zl::proto::networking::NetworkEndPoint& localendpoint() const;
  ::zl::proto::networking::NetworkEndPoint* release_localendpoint();
  ::zl::proto::networking::NetworkEndPoint* mutable_localendpoint();
  void set_allocated_localendpoint(::zl::proto::networking::NetworkEndPoint* localendpoint);

  // @@protoc_insertion_point(class_scope:zl.proto.launcher.PairRequestResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::zl::proto::launcher::ServerDescriptor* serverdescriptor_;
  ::zl::proto::networking::NetworkEndPoint* localendpoint_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_launcher_2fPairRequest_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PairRequest

// .zl.proto.launcher.ClientDescriptor ClientDescriptor = 1;
inline bool PairRequest::has_clientdescriptor() const {
  return this != internal_default_instance() && clientdescriptor_ != nullptr;
}
inline const ::zl::proto::launcher::ClientDescriptor& PairRequest::clientdescriptor() const {
  const ::zl::proto::launcher::ClientDescriptor* p = clientdescriptor_;
  // @@protoc_insertion_point(field_get:zl.proto.launcher.PairRequest.ClientDescriptor)
  return p != nullptr ? *p : *reinterpret_cast<const ::zl::proto::launcher::ClientDescriptor*>(
      &::zl::proto::launcher::_ClientDescriptor_default_instance_);
}
inline ::zl::proto::launcher::ClientDescriptor* PairRequest::release_clientdescriptor() {
  // @@protoc_insertion_point(field_release:zl.proto.launcher.PairRequest.ClientDescriptor)
  
  ::zl::proto::launcher::ClientDescriptor* temp = clientdescriptor_;
  clientdescriptor_ = nullptr;
  return temp;
}
inline ::zl::proto::launcher::ClientDescriptor* PairRequest::mutable_clientdescriptor() {
  
  if (clientdescriptor_ == nullptr) {
    auto* p = CreateMaybeMessage<::zl::proto::launcher::ClientDescriptor>(GetArenaNoVirtual());
    clientdescriptor_ = p;
  }
  // @@protoc_insertion_point(field_mutable:zl.proto.launcher.PairRequest.ClientDescriptor)
  return clientdescriptor_;
}
inline void PairRequest::set_allocated_clientdescriptor(::zl::proto::launcher::ClientDescriptor* clientdescriptor) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(clientdescriptor_);
  }
  if (clientdescriptor) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      clientdescriptor = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, clientdescriptor, submessage_arena);
    }
    
  } else {
    
  }
  clientdescriptor_ = clientdescriptor;
  // @@protoc_insertion_point(field_set_allocated:zl.proto.launcher.PairRequest.ClientDescriptor)
}

// -------------------------------------------------------------------

// PairRequestResponse

// .zl.proto.launcher.ServerDescriptor ServerDescriptor = 1;
inline bool PairRequestResponse::has_serverdescriptor() const {
  return this != internal_default_instance() && serverdescriptor_ != nullptr;
}
inline const ::zl::proto::launcher::ServerDescriptor& PairRequestResponse::serverdescriptor() const {
  const ::zl::proto::launcher::ServerDescriptor* p = serverdescriptor_;
  // @@protoc_insertion_point(field_get:zl.proto.launcher.PairRequestResponse.ServerDescriptor)
  return p != nullptr ? *p : *reinterpret_cast<const ::zl::proto::launcher::ServerDescriptor*>(
      &::zl::proto::launcher::_ServerDescriptor_default_instance_);
}
inline ::zl::proto::launcher::ServerDescriptor* PairRequestResponse::release_serverdescriptor() {
  // @@protoc_insertion_point(field_release:zl.proto.launcher.PairRequestResponse.ServerDescriptor)
  
  ::zl::proto::launcher::ServerDescriptor* temp = serverdescriptor_;
  serverdescriptor_ = nullptr;
  return temp;
}
inline ::zl::proto::launcher::ServerDescriptor* PairRequestResponse::mutable_serverdescriptor() {
  
  if (serverdescriptor_ == nullptr) {
    auto* p = CreateMaybeMessage<::zl::proto::launcher::ServerDescriptor>(GetArenaNoVirtual());
    serverdescriptor_ = p;
  }
  // @@protoc_insertion_point(field_mutable:zl.proto.launcher.PairRequestResponse.ServerDescriptor)
  return serverdescriptor_;
}
inline void PairRequestResponse::set_allocated_serverdescriptor(::zl::proto::launcher::ServerDescriptor* serverdescriptor) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(serverdescriptor_);
  }
  if (serverdescriptor) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      serverdescriptor = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, serverdescriptor, submessage_arena);
    }
    
  } else {
    
  }
  serverdescriptor_ = serverdescriptor;
  // @@protoc_insertion_point(field_set_allocated:zl.proto.launcher.PairRequestResponse.ServerDescriptor)
}

// .zl.proto.networking.NetworkEndPoint LocalEndPoint = 2;
inline bool PairRequestResponse::has_localendpoint() const {
  return this != internal_default_instance() && localendpoint_ != nullptr;
}
inline const ::zl::proto::networking::NetworkEndPoint& PairRequestResponse::localendpoint() const {
  const ::zl::proto::networking::NetworkEndPoint* p = localendpoint_;
  // @@protoc_insertion_point(field_get:zl.proto.launcher.PairRequestResponse.LocalEndPoint)
  return p != nullptr ? *p : *reinterpret_cast<const ::zl::proto::networking::NetworkEndPoint*>(
      &::zl::proto::networking::_NetworkEndPoint_default_instance_);
}
inline ::zl::proto::networking::NetworkEndPoint* PairRequestResponse::release_localendpoint() {
  // @@protoc_insertion_point(field_release:zl.proto.launcher.PairRequestResponse.LocalEndPoint)
  
  ::zl::proto::networking::NetworkEndPoint* temp = localendpoint_;
  localendpoint_ = nullptr;
  return temp;
}
inline ::zl::proto::networking::NetworkEndPoint* PairRequestResponse::mutable_localendpoint() {
  
  if (localendpoint_ == nullptr) {
    auto* p = CreateMaybeMessage<::zl::proto::networking::NetworkEndPoint>(GetArenaNoVirtual());
    localendpoint_ = p;
  }
  // @@protoc_insertion_point(field_mutable:zl.proto.launcher.PairRequestResponse.LocalEndPoint)
  return localendpoint_;
}
inline void PairRequestResponse::set_allocated_localendpoint(::zl::proto::networking::NetworkEndPoint* localendpoint) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(localendpoint_);
  }
  if (localendpoint) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      localendpoint = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, localendpoint, submessage_arena);
    }
    
  } else {
    
  }
  localendpoint_ = localendpoint;
  // @@protoc_insertion_point(field_set_allocated:zl.proto.launcher.PairRequestResponse.LocalEndPoint)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace launcher
}  // namespace proto
}  // namespace zl

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_launcher_2fPairRequest_2eproto
