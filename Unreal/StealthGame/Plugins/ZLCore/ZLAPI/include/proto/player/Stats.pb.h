// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: player/Stats.proto

#ifndef PROTOBUF_INCLUDED_player_2fStats_2eproto
#define PROTOBUF_INCLUDED_player_2fStats_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_player_2fStats_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_player_2fStats_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[6]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_player_2fStats_2eproto();
namespace zl {
namespace proto {
namespace player {
class AreaStats;
class AreaStatsDefaultTypeInternal;
extern AreaStatsDefaultTypeInternal _AreaStats_default_instance_;
class AreaStats_StatsEntry_DoNotUse;
class AreaStats_StatsEntry_DoNotUseDefaultTypeInternal;
extern AreaStats_StatsEntry_DoNotUseDefaultTypeInternal _AreaStats_StatsEntry_DoNotUse_default_instance_;
class Stats;
class StatsDefaultTypeInternal;
extern StatsDefaultTypeInternal _Stats_default_instance_;
class StatsMap;
class StatsMapDefaultTypeInternal;
extern StatsMapDefaultTypeInternal _StatsMap_default_instance_;
class StatsMap_PlayerStatsEntry_DoNotUse;
class StatsMap_PlayerStatsEntry_DoNotUseDefaultTypeInternal;
extern StatsMap_PlayerStatsEntry_DoNotUseDefaultTypeInternal _StatsMap_PlayerStatsEntry_DoNotUse_default_instance_;
class Stats_AreaStatsEntry_DoNotUse;
class Stats_AreaStatsEntry_DoNotUseDefaultTypeInternal;
extern Stats_AreaStatsEntry_DoNotUseDefaultTypeInternal _Stats_AreaStatsEntry_DoNotUse_default_instance_;
}  // namespace player
}  // namespace proto
}  // namespace zl
namespace google {
namespace protobuf {
template<> ::zl::proto::player::AreaStats* Arena::CreateMaybeMessage<::zl::proto::player::AreaStats>(Arena*);
template<> ::zl::proto::player::AreaStats_StatsEntry_DoNotUse* Arena::CreateMaybeMessage<::zl::proto::player::AreaStats_StatsEntry_DoNotUse>(Arena*);
template<> ::zl::proto::player::Stats* Arena::CreateMaybeMessage<::zl::proto::player::Stats>(Arena*);
template<> ::zl::proto::player::StatsMap* Arena::CreateMaybeMessage<::zl::proto::player::StatsMap>(Arena*);
template<> ::zl::proto::player::StatsMap_PlayerStatsEntry_DoNotUse* Arena::CreateMaybeMessage<::zl::proto::player::StatsMap_PlayerStatsEntry_DoNotUse>(Arena*);
template<> ::zl::proto::player::Stats_AreaStatsEntry_DoNotUse* Arena::CreateMaybeMessage<::zl::proto::player::Stats_AreaStatsEntry_DoNotUse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace zl {
namespace proto {
namespace player {

// ===================================================================

class AreaStats_StatsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<AreaStats_StatsEntry_DoNotUse, 
    ::std::string, double,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<AreaStats_StatsEntry_DoNotUse, 
    ::std::string, double,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
    0 > SuperType;
  AreaStats_StatsEntry_DoNotUse();
  AreaStats_StatsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const AreaStats_StatsEntry_DoNotUse& other);
  static const AreaStats_StatsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const AreaStats_StatsEntry_DoNotUse*>(&_AreaStats_StatsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class AreaStats final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zl.proto.player.AreaStats) */ {
 public:
  AreaStats();
  virtual ~AreaStats();

  AreaStats(const AreaStats& from);

  inline AreaStats& operator=(const AreaStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AreaStats(AreaStats&& from) noexcept
    : AreaStats() {
    *this = ::std::move(from);
  }

  inline AreaStats& operator=(AreaStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AreaStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AreaStats* internal_default_instance() {
    return reinterpret_cast<const AreaStats*>(
               &_AreaStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(AreaStats* other);
  friend void swap(AreaStats& a, AreaStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AreaStats* New() const final {
    return CreateMaybeMessage<AreaStats>(nullptr);
  }

  AreaStats* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AreaStats>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AreaStats& from);
  void MergeFrom(const AreaStats& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AreaStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, double> Stats = 1;
  int stats_size() const;
  void clear_stats();
  static const int kStatsFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, double >&
      stats() const;
  ::google::protobuf::Map< ::std::string, double >*
      mutable_stats();

  // @@protoc_insertion_point(class_scope:zl.proto.player.AreaStats)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      AreaStats_StatsEntry_DoNotUse,
      ::std::string, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 > stats_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_player_2fStats_2eproto;
};
// -------------------------------------------------------------------

class Stats_AreaStatsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Stats_AreaStatsEntry_DoNotUse, 
    ::std::string, ::zl::proto::player::AreaStats,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<Stats_AreaStatsEntry_DoNotUse, 
    ::std::string, ::zl::proto::player::AreaStats,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Stats_AreaStatsEntry_DoNotUse();
  Stats_AreaStatsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Stats_AreaStatsEntry_DoNotUse& other);
  static const Stats_AreaStatsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Stats_AreaStatsEntry_DoNotUse*>(&_Stats_AreaStatsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Stats final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zl.proto.player.Stats) */ {
 public:
  Stats();
  virtual ~Stats();

  Stats(const Stats& from);

  inline Stats& operator=(const Stats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stats(Stats&& from) noexcept
    : Stats() {
    *this = ::std::move(from);
  }

  inline Stats& operator=(Stats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Stats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stats* internal_default_instance() {
    return reinterpret_cast<const Stats*>(
               &_Stats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Stats* other);
  friend void swap(Stats& a, Stats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stats* New() const final {
    return CreateMaybeMessage<Stats>(nullptr);
  }

  Stats* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Stats>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Stats& from);
  void MergeFrom(const Stats& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Stats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .zl.proto.player.AreaStats> AreaStats = 2;
  int areastats_size() const;
  void clear_areastats();
  static const int kAreaStatsFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::zl::proto::player::AreaStats >&
      areastats() const;
  ::google::protobuf::Map< ::std::string, ::zl::proto::player::AreaStats >*
      mutable_areastats();

  // int64 Score = 1;
  void clear_score();
  static const int kScoreFieldNumber = 1;
  ::google::protobuf::int64 score() const;
  void set_score(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:zl.proto.player.Stats)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      Stats_AreaStatsEntry_DoNotUse,
      ::std::string, ::zl::proto::player::AreaStats,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > areastats_;
  ::google::protobuf::int64 score_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_player_2fStats_2eproto;
};
// -------------------------------------------------------------------

class StatsMap_PlayerStatsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<StatsMap_PlayerStatsEntry_DoNotUse, 
    ::std::string, ::zl::proto::player::Stats,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<StatsMap_PlayerStatsEntry_DoNotUse, 
    ::std::string, ::zl::proto::player::Stats,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  StatsMap_PlayerStatsEntry_DoNotUse();
  StatsMap_PlayerStatsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const StatsMap_PlayerStatsEntry_DoNotUse& other);
  static const StatsMap_PlayerStatsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const StatsMap_PlayerStatsEntry_DoNotUse*>(&_StatsMap_PlayerStatsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class StatsMap final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zl.proto.player.StatsMap) */ {
 public:
  StatsMap();
  virtual ~StatsMap();

  StatsMap(const StatsMap& from);

  inline StatsMap& operator=(const StatsMap& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StatsMap(StatsMap&& from) noexcept
    : StatsMap() {
    *this = ::std::move(from);
  }

  inline StatsMap& operator=(StatsMap&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StatsMap& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StatsMap* internal_default_instance() {
    return reinterpret_cast<const StatsMap*>(
               &_StatsMap_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(StatsMap* other);
  friend void swap(StatsMap& a, StatsMap& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StatsMap* New() const final {
    return CreateMaybeMessage<StatsMap>(nullptr);
  }

  StatsMap* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StatsMap>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StatsMap& from);
  void MergeFrom(const StatsMap& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StatsMap* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .zl.proto.player.Stats> PlayerStats = 1;
  int playerstats_size() const;
  void clear_playerstats();
  static const int kPlayerStatsFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::zl::proto::player::Stats >&
      playerstats() const;
  ::google::protobuf::Map< ::std::string, ::zl::proto::player::Stats >*
      mutable_playerstats();

  // @@protoc_insertion_point(class_scope:zl.proto.player.StatsMap)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      StatsMap_PlayerStatsEntry_DoNotUse,
      ::std::string, ::zl::proto::player::Stats,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > playerstats_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_player_2fStats_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// AreaStats

// map<string, double> Stats = 1;
inline int AreaStats::stats_size() const {
  return stats_.size();
}
inline void AreaStats::clear_stats() {
  stats_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, double >&
AreaStats::stats() const {
  // @@protoc_insertion_point(field_map:zl.proto.player.AreaStats.Stats)
  return stats_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, double >*
AreaStats::mutable_stats() {
  // @@protoc_insertion_point(field_mutable_map:zl.proto.player.AreaStats.Stats)
  return stats_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Stats

// int64 Score = 1;
inline void Stats::clear_score() {
  score_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 Stats::score() const {
  // @@protoc_insertion_point(field_get:zl.proto.player.Stats.Score)
  return score_;
}
inline void Stats::set_score(::google::protobuf::int64 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:zl.proto.player.Stats.Score)
}

// map<string, .zl.proto.player.AreaStats> AreaStats = 2;
inline int Stats::areastats_size() const {
  return areastats_.size();
}
inline void Stats::clear_areastats() {
  areastats_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::zl::proto::player::AreaStats >&
Stats::areastats() const {
  // @@protoc_insertion_point(field_map:zl.proto.player.Stats.AreaStats)
  return areastats_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::zl::proto::player::AreaStats >*
Stats::mutable_areastats() {
  // @@protoc_insertion_point(field_mutable_map:zl.proto.player.Stats.AreaStats)
  return areastats_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// StatsMap

// map<string, .zl.proto.player.Stats> PlayerStats = 1;
inline int StatsMap::playerstats_size() const {
  return playerstats_.size();
}
inline void StatsMap::clear_playerstats() {
  playerstats_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::zl::proto::player::Stats >&
StatsMap::playerstats() const {
  // @@protoc_insertion_point(field_map:zl.proto.player.StatsMap.PlayerStats)
  return playerstats_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::zl::proto::player::Stats >*
StatsMap::mutable_playerstats() {
  // @@protoc_insertion_point(field_mutable_map:zl.proto.player.StatsMap.PlayerStats)
  return playerstats_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace player
}  // namespace proto
}  // namespace zl

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_player_2fStats_2eproto
