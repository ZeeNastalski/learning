// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MapBounds.proto

#ifndef PROTOBUF_INCLUDED_MapBounds_2eproto
#define PROTOBUF_INCLUDED_MapBounds_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "Vector2.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_MapBounds_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_MapBounds_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_MapBounds_2eproto();
namespace zl {
namespace proto {
class MapBounds;
class MapBoundsDefaultTypeInternal;
extern MapBoundsDefaultTypeInternal _MapBounds_default_instance_;
class ObstacleBounds;
class ObstacleBoundsDefaultTypeInternal;
extern ObstacleBoundsDefaultTypeInternal _ObstacleBounds_default_instance_;
}  // namespace proto
}  // namespace zl
namespace google {
namespace protobuf {
template<> ::zl::proto::MapBounds* Arena::CreateMaybeMessage<::zl::proto::MapBounds>(Arena*);
template<> ::zl::proto::ObstacleBounds* Arena::CreateMaybeMessage<::zl::proto::ObstacleBounds>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace zl {
namespace proto {

// ===================================================================

class ObstacleBounds final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zl.proto.ObstacleBounds) */ {
 public:
  ObstacleBounds();
  virtual ~ObstacleBounds();

  ObstacleBounds(const ObstacleBounds& from);

  inline ObstacleBounds& operator=(const ObstacleBounds& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ObstacleBounds(ObstacleBounds&& from) noexcept
    : ObstacleBounds() {
    *this = ::std::move(from);
  }

  inline ObstacleBounds& operator=(ObstacleBounds&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ObstacleBounds& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObstacleBounds* internal_default_instance() {
    return reinterpret_cast<const ObstacleBounds*>(
               &_ObstacleBounds_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ObstacleBounds* other);
  friend void swap(ObstacleBounds& a, ObstacleBounds& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ObstacleBounds* New() const final {
    return CreateMaybeMessage<ObstacleBounds>(nullptr);
  }

  ObstacleBounds* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ObstacleBounds>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ObstacleBounds& from);
  void MergeFrom(const ObstacleBounds& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ObstacleBounds* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .zl.proto.Vector2 Vertices = 1;
  int vertices_size() const;
  void clear_vertices();
  static const int kVerticesFieldNumber = 1;
  ::zl::proto::Vector2* mutable_vertices(int index);
  ::google::protobuf::RepeatedPtrField< ::zl::proto::Vector2 >*
      mutable_vertices();
  const ::zl::proto::Vector2& vertices(int index) const;
  ::zl::proto::Vector2* add_vertices();
  const ::google::protobuf::RepeatedPtrField< ::zl::proto::Vector2 >&
      vertices() const;

  // @@protoc_insertion_point(class_scope:zl.proto.ObstacleBounds)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::zl::proto::Vector2 > vertices_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_MapBounds_2eproto;
};
// -------------------------------------------------------------------

class MapBounds final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zl.proto.MapBounds) */ {
 public:
  MapBounds();
  virtual ~MapBounds();

  MapBounds(const MapBounds& from);

  inline MapBounds& operator=(const MapBounds& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MapBounds(MapBounds&& from) noexcept
    : MapBounds() {
    *this = ::std::move(from);
  }

  inline MapBounds& operator=(MapBounds&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MapBounds& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MapBounds* internal_default_instance() {
    return reinterpret_cast<const MapBounds*>(
               &_MapBounds_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(MapBounds* other);
  friend void swap(MapBounds& a, MapBounds& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MapBounds* New() const final {
    return CreateMaybeMessage<MapBounds>(nullptr);
  }

  MapBounds* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MapBounds>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MapBounds& from);
  void MergeFrom(const MapBounds& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MapBounds* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .zl.proto.Vector2 BoundaryVertices = 1;
  int boundaryvertices_size() const;
  void clear_boundaryvertices();
  static const int kBoundaryVerticesFieldNumber = 1;
  ::zl::proto::Vector2* mutable_boundaryvertices(int index);
  ::google::protobuf::RepeatedPtrField< ::zl::proto::Vector2 >*
      mutable_boundaryvertices();
  const ::zl::proto::Vector2& boundaryvertices(int index) const;
  ::zl::proto::Vector2* add_boundaryvertices();
  const ::google::protobuf::RepeatedPtrField< ::zl::proto::Vector2 >&
      boundaryvertices() const;

  // repeated .zl.proto.ObstacleBounds Obstacles = 2;
  int obstacles_size() const;
  void clear_obstacles();
  static const int kObstaclesFieldNumber = 2;
  ::zl::proto::ObstacleBounds* mutable_obstacles(int index);
  ::google::protobuf::RepeatedPtrField< ::zl::proto::ObstacleBounds >*
      mutable_obstacles();
  const ::zl::proto::ObstacleBounds& obstacles(int index) const;
  ::zl::proto::ObstacleBounds* add_obstacles();
  const ::google::protobuf::RepeatedPtrField< ::zl::proto::ObstacleBounds >&
      obstacles() const;

  // @@protoc_insertion_point(class_scope:zl.proto.MapBounds)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::zl::proto::Vector2 > boundaryvertices_;
  ::google::protobuf::RepeatedPtrField< ::zl::proto::ObstacleBounds > obstacles_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_MapBounds_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ObstacleBounds

// repeated .zl.proto.Vector2 Vertices = 1;
inline int ObstacleBounds::vertices_size() const {
  return vertices_.size();
}
inline ::zl::proto::Vector2* ObstacleBounds::mutable_vertices(int index) {
  // @@protoc_insertion_point(field_mutable:zl.proto.ObstacleBounds.Vertices)
  return vertices_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::zl::proto::Vector2 >*
ObstacleBounds::mutable_vertices() {
  // @@protoc_insertion_point(field_mutable_list:zl.proto.ObstacleBounds.Vertices)
  return &vertices_;
}
inline const ::zl::proto::Vector2& ObstacleBounds::vertices(int index) const {
  // @@protoc_insertion_point(field_get:zl.proto.ObstacleBounds.Vertices)
  return vertices_.Get(index);
}
inline ::zl::proto::Vector2* ObstacleBounds::add_vertices() {
  // @@protoc_insertion_point(field_add:zl.proto.ObstacleBounds.Vertices)
  return vertices_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::zl::proto::Vector2 >&
ObstacleBounds::vertices() const {
  // @@protoc_insertion_point(field_list:zl.proto.ObstacleBounds.Vertices)
  return vertices_;
}

// -------------------------------------------------------------------

// MapBounds

// repeated .zl.proto.Vector2 BoundaryVertices = 1;
inline int MapBounds::boundaryvertices_size() const {
  return boundaryvertices_.size();
}
inline ::zl::proto::Vector2* MapBounds::mutable_boundaryvertices(int index) {
  // @@protoc_insertion_point(field_mutable:zl.proto.MapBounds.BoundaryVertices)
  return boundaryvertices_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::zl::proto::Vector2 >*
MapBounds::mutable_boundaryvertices() {
  // @@protoc_insertion_point(field_mutable_list:zl.proto.MapBounds.BoundaryVertices)
  return &boundaryvertices_;
}
inline const ::zl::proto::Vector2& MapBounds::boundaryvertices(int index) const {
  // @@protoc_insertion_point(field_get:zl.proto.MapBounds.BoundaryVertices)
  return boundaryvertices_.Get(index);
}
inline ::zl::proto::Vector2* MapBounds::add_boundaryvertices() {
  // @@protoc_insertion_point(field_add:zl.proto.MapBounds.BoundaryVertices)
  return boundaryvertices_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::zl::proto::Vector2 >&
MapBounds::boundaryvertices() const {
  // @@protoc_insertion_point(field_list:zl.proto.MapBounds.BoundaryVertices)
  return boundaryvertices_;
}

// repeated .zl.proto.ObstacleBounds Obstacles = 2;
inline int MapBounds::obstacles_size() const {
  return obstacles_.size();
}
inline void MapBounds::clear_obstacles() {
  obstacles_.Clear();
}
inline ::zl::proto::ObstacleBounds* MapBounds::mutable_obstacles(int index) {
  // @@protoc_insertion_point(field_mutable:zl.proto.MapBounds.Obstacles)
  return obstacles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::zl::proto::ObstacleBounds >*
MapBounds::mutable_obstacles() {
  // @@protoc_insertion_point(field_mutable_list:zl.proto.MapBounds.Obstacles)
  return &obstacles_;
}
inline const ::zl::proto::ObstacleBounds& MapBounds::obstacles(int index) const {
  // @@protoc_insertion_point(field_get:zl.proto.MapBounds.Obstacles)
  return obstacles_.Get(index);
}
inline ::zl::proto::ObstacleBounds* MapBounds::add_obstacles() {
  // @@protoc_insertion_point(field_add:zl.proto.MapBounds.Obstacles)
  return obstacles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::zl::proto::ObstacleBounds >&
MapBounds::obstacles() const {
  // @@protoc_insertion_point(field_list:zl.proto.MapBounds.Obstacles)
  return obstacles_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace zl

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_MapBounds_2eproto
