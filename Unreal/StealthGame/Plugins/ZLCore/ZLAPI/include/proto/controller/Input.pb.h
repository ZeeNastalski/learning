// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: controller/Input.proto

#ifndef PROTOBUF_INCLUDED_controller_2fInput_2eproto
#define PROTOBUF_INCLUDED_controller_2fInput_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_controller_2fInput_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_controller_2fInput_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_controller_2fInput_2eproto();
namespace zl {
namespace proto {
namespace controller {
class Input;
class InputDefaultTypeInternal;
extern InputDefaultTypeInternal _Input_default_instance_;
}  // namespace controller
}  // namespace proto
}  // namespace zl
namespace google {
namespace protobuf {
template<> ::zl::proto::controller::Input* Arena::CreateMaybeMessage<::zl::proto::controller::Input>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace zl {
namespace proto {
namespace controller {

enum Input_EInputBitField {
  Input_EInputBitField_NONE = 0,
  Input_EInputBitField_TRIGGER = 1,
  Input_EInputBitField_BOTTOM_BUTTON = 2,
  Input_EInputBitField_SIDE_BUTTON = 4,
  Input_EInputBitField_PUMP_FORWARD = 8,
  Input_EInputBitField_PUMP_BACK = 16,
  Input_EInputBitField_Input_EInputBitField_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  Input_EInputBitField_Input_EInputBitField_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool Input_EInputBitField_IsValid(int value);
const Input_EInputBitField Input_EInputBitField_EInputBitField_MIN = Input_EInputBitField_NONE;
const Input_EInputBitField Input_EInputBitField_EInputBitField_MAX = Input_EInputBitField_PUMP_BACK;
const int Input_EInputBitField_EInputBitField_ARRAYSIZE = Input_EInputBitField_EInputBitField_MAX + 1;

const ::google::protobuf::EnumDescriptor* Input_EInputBitField_descriptor();
inline const ::std::string& Input_EInputBitField_Name(Input_EInputBitField value) {
  return ::google::protobuf::internal::NameOfEnum(
    Input_EInputBitField_descriptor(), value);
}
inline bool Input_EInputBitField_Parse(
    const ::std::string& name, Input_EInputBitField* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Input_EInputBitField>(
    Input_EInputBitField_descriptor(), name, value);
}
// ===================================================================

class Input final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zl.proto.controller.Input) */ {
 public:
  Input();
  virtual ~Input();

  Input(const Input& from);

  inline Input& operator=(const Input& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Input(Input&& from) noexcept
    : Input() {
    *this = ::std::move(from);
  }

  inline Input& operator=(Input&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Input& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Input* internal_default_instance() {
    return reinterpret_cast<const Input*>(
               &_Input_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Input* other);
  friend void swap(Input& a, Input& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Input* New() const final {
    return CreateMaybeMessage<Input>(nullptr);
  }

  Input* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Input>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Input& from);
  void MergeFrom(const Input& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Input* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Input_EInputBitField EInputBitField;
  static const EInputBitField NONE =
    Input_EInputBitField_NONE;
  static const EInputBitField TRIGGER =
    Input_EInputBitField_TRIGGER;
  static const EInputBitField BOTTOM_BUTTON =
    Input_EInputBitField_BOTTOM_BUTTON;
  static const EInputBitField SIDE_BUTTON =
    Input_EInputBitField_SIDE_BUTTON;
  static const EInputBitField PUMP_FORWARD =
    Input_EInputBitField_PUMP_FORWARD;
  static const EInputBitField PUMP_BACK =
    Input_EInputBitField_PUMP_BACK;
  static inline bool EInputBitField_IsValid(int value) {
    return Input_EInputBitField_IsValid(value);
  }
  static const EInputBitField EInputBitField_MIN =
    Input_EInputBitField_EInputBitField_MIN;
  static const EInputBitField EInputBitField_MAX =
    Input_EInputBitField_EInputBitField_MAX;
  static const int EInputBitField_ARRAYSIZE =
    Input_EInputBitField_EInputBitField_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EInputBitField_descriptor() {
    return Input_EInputBitField_descriptor();
  }
  static inline const ::std::string& EInputBitField_Name(EInputBitField value) {
    return Input_EInputBitField_Name(value);
  }
  static inline bool EInputBitField_Parse(const ::std::string& name,
      EInputBitField* value) {
    return Input_EInputBitField_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .zl.proto.controller.Input.EInputBitField Inputs = 1;
  void clear_inputs();
  static const int kInputsFieldNumber = 1;
  ::zl::proto::controller::Input_EInputBitField inputs() const;
  void set_inputs(::zl::proto::controller::Input_EInputBitField value);

  // @@protoc_insertion_point(class_scope:zl.proto.controller.Input)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int inputs_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_controller_2fInput_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Input

// .zl.proto.controller.Input.EInputBitField Inputs = 1;
inline void Input::clear_inputs() {
  inputs_ = 0;
}
inline ::zl::proto::controller::Input_EInputBitField Input::inputs() const {
  // @@protoc_insertion_point(field_get:zl.proto.controller.Input.Inputs)
  return static_cast< ::zl::proto::controller::Input_EInputBitField >(inputs_);
}
inline void Input::set_inputs(::zl::proto::controller::Input_EInputBitField value) {
  
  inputs_ = value;
  // @@protoc_insertion_point(field_set:zl.proto.controller.Input.Inputs)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace controller
}  // namespace proto
}  // namespace zl

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::zl::proto::controller::Input_EInputBitField> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::zl::proto::controller::Input_EInputBitField>() {
  return ::zl::proto::controller::Input_EInputBitField_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_controller_2fInput_2eproto
