// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: networking/GRPCServer.proto

#ifndef PROTOBUF_INCLUDED_networking_2fGRPCServer_2eproto
#define PROTOBUF_INCLUDED_networking_2fGRPCServer_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "networking/NetworkEndPoint.pb.h"
#include "launcher/Descriptors.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_networking_2fGRPCServer_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_networking_2fGRPCServer_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_networking_2fGRPCServer_2eproto();
namespace zl {
namespace proto {
namespace networking {
class ConnectionRequest;
class ConnectionRequestDefaultTypeInternal;
extern ConnectionRequestDefaultTypeInternal _ConnectionRequest_default_instance_;
class ConnectionResult;
class ConnectionResultDefaultTypeInternal;
extern ConnectionResultDefaultTypeInternal _ConnectionResult_default_instance_;
class PingResult;
class PingResultDefaultTypeInternal;
extern PingResultDefaultTypeInternal _PingResult_default_instance_;
}  // namespace networking
}  // namespace proto
}  // namespace zl
namespace google {
namespace protobuf {
template<> ::zl::proto::networking::ConnectionRequest* Arena::CreateMaybeMessage<::zl::proto::networking::ConnectionRequest>(Arena*);
template<> ::zl::proto::networking::ConnectionResult* Arena::CreateMaybeMessage<::zl::proto::networking::ConnectionResult>(Arena*);
template<> ::zl::proto::networking::PingResult* Arena::CreateMaybeMessage<::zl::proto::networking::PingResult>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace zl {
namespace proto {
namespace networking {

enum ConnectionResult_StatusCode {
  ConnectionResult_StatusCode_SUCCESS = 0,
  ConnectionResult_StatusCode_ERROR_UNKNOWN = 1,
  ConnectionResult_StatusCode_ERROR_ALREADY_CONNECTED = 2,
  ConnectionResult_StatusCode_ERROR_TIMED_OUT = 3,
  ConnectionResult_StatusCode_ConnectionResult_StatusCode_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  ConnectionResult_StatusCode_ConnectionResult_StatusCode_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool ConnectionResult_StatusCode_IsValid(int value);
const ConnectionResult_StatusCode ConnectionResult_StatusCode_StatusCode_MIN = ConnectionResult_StatusCode_SUCCESS;
const ConnectionResult_StatusCode ConnectionResult_StatusCode_StatusCode_MAX = ConnectionResult_StatusCode_ERROR_TIMED_OUT;
const int ConnectionResult_StatusCode_StatusCode_ARRAYSIZE = ConnectionResult_StatusCode_StatusCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ConnectionResult_StatusCode_descriptor();
inline const ::std::string& ConnectionResult_StatusCode_Name(ConnectionResult_StatusCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ConnectionResult_StatusCode_descriptor(), value);
}
inline bool ConnectionResult_StatusCode_Parse(
    const ::std::string& name, ConnectionResult_StatusCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConnectionResult_StatusCode>(
    ConnectionResult_StatusCode_descriptor(), name, value);
}
enum PingResult_StatusCode {
  PingResult_StatusCode_SUCCESS = 0,
  PingResult_StatusCode_ERROR_UNKNOWN = 1,
  PingResult_StatusCode_ERROR_CLIENT_NOT_CONNECTED = 2,
  PingResult_StatusCode_ERROR_TIMED_OUT = 3,
  PingResult_StatusCode_PingResult_StatusCode_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  PingResult_StatusCode_PingResult_StatusCode_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool PingResult_StatusCode_IsValid(int value);
const PingResult_StatusCode PingResult_StatusCode_StatusCode_MIN = PingResult_StatusCode_SUCCESS;
const PingResult_StatusCode PingResult_StatusCode_StatusCode_MAX = PingResult_StatusCode_ERROR_TIMED_OUT;
const int PingResult_StatusCode_StatusCode_ARRAYSIZE = PingResult_StatusCode_StatusCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* PingResult_StatusCode_descriptor();
inline const ::std::string& PingResult_StatusCode_Name(PingResult_StatusCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    PingResult_StatusCode_descriptor(), value);
}
inline bool PingResult_StatusCode_Parse(
    const ::std::string& name, PingResult_StatusCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PingResult_StatusCode>(
    PingResult_StatusCode_descriptor(), name, value);
}
// ===================================================================

class ConnectionRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zl.proto.networking.ConnectionRequest) */ {
 public:
  ConnectionRequest();
  virtual ~ConnectionRequest();

  ConnectionRequest(const ConnectionRequest& from);

  inline ConnectionRequest& operator=(const ConnectionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConnectionRequest(ConnectionRequest&& from) noexcept
    : ConnectionRequest() {
    *this = ::std::move(from);
  }

  inline ConnectionRequest& operator=(ConnectionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ConnectionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConnectionRequest* internal_default_instance() {
    return reinterpret_cast<const ConnectionRequest*>(
               &_ConnectionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ConnectionRequest* other);
  friend void swap(ConnectionRequest& a, ConnectionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConnectionRequest* New() const final {
    return CreateMaybeMessage<ConnectionRequest>(nullptr);
  }

  ConnectionRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConnectionRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConnectionRequest& from);
  void MergeFrom(const ConnectionRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConnectionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .zl.proto.networking.NetworkEndPoint ClientEndPoint = 1;
  bool has_clientendpoint() const;
  void clear_clientendpoint();
  static const int kClientEndPointFieldNumber = 1;
  const ::zl::proto::networking::NetworkEndPoint& clientendpoint() const;
  ::zl::proto::networking::NetworkEndPoint* release_clientendpoint();
  ::zl::proto::networking::NetworkEndPoint* mutable_clientendpoint();
  void set_allocated_clientendpoint(::zl::proto::networking::NetworkEndPoint* clientendpoint);

  // .zl.proto.launcher.ClientDescriptor ClientDescriptor = 2;
  bool has_clientdescriptor() const;
  void clear_clientdescriptor();
  static const int kClientDescriptorFieldNumber = 2;
  const ::zl::proto::launcher::ClientDescriptor& clientdescriptor() const;
  ::zl::proto::launcher::ClientDescriptor* release_clientdescriptor();
  ::zl::proto::launcher::ClientDescriptor* mutable_clientdescriptor();
  void set_allocated_clientdescriptor(::zl::proto::launcher::ClientDescriptor* clientdescriptor);

  // int32 ChannelFlags = 3;
  void clear_channelflags();
  static const int kChannelFlagsFieldNumber = 3;
  ::google::protobuf::int32 channelflags() const;
  void set_channelflags(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:zl.proto.networking.ConnectionRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::zl::proto::networking::NetworkEndPoint* clientendpoint_;
  ::zl::proto::launcher::ClientDescriptor* clientdescriptor_;
  ::google::protobuf::int32 channelflags_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_networking_2fGRPCServer_2eproto;
};
// -------------------------------------------------------------------

class ConnectionResult final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zl.proto.networking.ConnectionResult) */ {
 public:
  ConnectionResult();
  virtual ~ConnectionResult();

  ConnectionResult(const ConnectionResult& from);

  inline ConnectionResult& operator=(const ConnectionResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConnectionResult(ConnectionResult&& from) noexcept
    : ConnectionResult() {
    *this = ::std::move(from);
  }

  inline ConnectionResult& operator=(ConnectionResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ConnectionResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConnectionResult* internal_default_instance() {
    return reinterpret_cast<const ConnectionResult*>(
               &_ConnectionResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ConnectionResult* other);
  friend void swap(ConnectionResult& a, ConnectionResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConnectionResult* New() const final {
    return CreateMaybeMessage<ConnectionResult>(nullptr);
  }

  ConnectionResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConnectionResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConnectionResult& from);
  void MergeFrom(const ConnectionResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConnectionResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ConnectionResult_StatusCode StatusCode;
  static const StatusCode SUCCESS =
    ConnectionResult_StatusCode_SUCCESS;
  static const StatusCode ERROR_UNKNOWN =
    ConnectionResult_StatusCode_ERROR_UNKNOWN;
  static const StatusCode ERROR_ALREADY_CONNECTED =
    ConnectionResult_StatusCode_ERROR_ALREADY_CONNECTED;
  static const StatusCode ERROR_TIMED_OUT =
    ConnectionResult_StatusCode_ERROR_TIMED_OUT;
  static inline bool StatusCode_IsValid(int value) {
    return ConnectionResult_StatusCode_IsValid(value);
  }
  static const StatusCode StatusCode_MIN =
    ConnectionResult_StatusCode_StatusCode_MIN;
  static const StatusCode StatusCode_MAX =
    ConnectionResult_StatusCode_StatusCode_MAX;
  static const int StatusCode_ARRAYSIZE =
    ConnectionResult_StatusCode_StatusCode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  StatusCode_descriptor() {
    return ConnectionResult_StatusCode_descriptor();
  }
  static inline const ::std::string& StatusCode_Name(StatusCode value) {
    return ConnectionResult_StatusCode_Name(value);
  }
  static inline bool StatusCode_Parse(const ::std::string& name,
      StatusCode* value) {
    return ConnectionResult_StatusCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .zl.proto.networking.ConnectionResult.StatusCode Status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::zl::proto::networking::ConnectionResult_StatusCode status() const;
  void set_status(::zl::proto::networking::ConnectionResult_StatusCode value);

  // @@protoc_insertion_point(class_scope:zl.proto.networking.ConnectionResult)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_networking_2fGRPCServer_2eproto;
};
// -------------------------------------------------------------------

class PingResult final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zl.proto.networking.PingResult) */ {
 public:
  PingResult();
  virtual ~PingResult();

  PingResult(const PingResult& from);

  inline PingResult& operator=(const PingResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PingResult(PingResult&& from) noexcept
    : PingResult() {
    *this = ::std::move(from);
  }

  inline PingResult& operator=(PingResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PingResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PingResult* internal_default_instance() {
    return reinterpret_cast<const PingResult*>(
               &_PingResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(PingResult* other);
  friend void swap(PingResult& a, PingResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PingResult* New() const final {
    return CreateMaybeMessage<PingResult>(nullptr);
  }

  PingResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PingResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PingResult& from);
  void MergeFrom(const PingResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PingResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PingResult_StatusCode StatusCode;
  static const StatusCode SUCCESS =
    PingResult_StatusCode_SUCCESS;
  static const StatusCode ERROR_UNKNOWN =
    PingResult_StatusCode_ERROR_UNKNOWN;
  static const StatusCode ERROR_CLIENT_NOT_CONNECTED =
    PingResult_StatusCode_ERROR_CLIENT_NOT_CONNECTED;
  static const StatusCode ERROR_TIMED_OUT =
    PingResult_StatusCode_ERROR_TIMED_OUT;
  static inline bool StatusCode_IsValid(int value) {
    return PingResult_StatusCode_IsValid(value);
  }
  static const StatusCode StatusCode_MIN =
    PingResult_StatusCode_StatusCode_MIN;
  static const StatusCode StatusCode_MAX =
    PingResult_StatusCode_StatusCode_MAX;
  static const int StatusCode_ARRAYSIZE =
    PingResult_StatusCode_StatusCode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  StatusCode_descriptor() {
    return PingResult_StatusCode_descriptor();
  }
  static inline const ::std::string& StatusCode_Name(StatusCode value) {
    return PingResult_StatusCode_Name(value);
  }
  static inline bool StatusCode_Parse(const ::std::string& name,
      StatusCode* value) {
    return PingResult_StatusCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .zl.proto.networking.PingResult.StatusCode Status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::zl::proto::networking::PingResult_StatusCode status() const;
  void set_status(::zl::proto::networking::PingResult_StatusCode value);

  // @@protoc_insertion_point(class_scope:zl.proto.networking.PingResult)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_networking_2fGRPCServer_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ConnectionRequest

// .zl.proto.networking.NetworkEndPoint ClientEndPoint = 1;
inline bool ConnectionRequest::has_clientendpoint() const {
  return this != internal_default_instance() && clientendpoint_ != nullptr;
}
inline const ::zl::proto::networking::NetworkEndPoint& ConnectionRequest::clientendpoint() const {
  const ::zl::proto::networking::NetworkEndPoint* p = clientendpoint_;
  // @@protoc_insertion_point(field_get:zl.proto.networking.ConnectionRequest.ClientEndPoint)
  return p != nullptr ? *p : *reinterpret_cast<const ::zl::proto::networking::NetworkEndPoint*>(
      &::zl::proto::networking::_NetworkEndPoint_default_instance_);
}
inline ::zl::proto::networking::NetworkEndPoint* ConnectionRequest::release_clientendpoint() {
  // @@protoc_insertion_point(field_release:zl.proto.networking.ConnectionRequest.ClientEndPoint)
  
  ::zl::proto::networking::NetworkEndPoint* temp = clientendpoint_;
  clientendpoint_ = nullptr;
  return temp;
}
inline ::zl::proto::networking::NetworkEndPoint* ConnectionRequest::mutable_clientendpoint() {
  
  if (clientendpoint_ == nullptr) {
    auto* p = CreateMaybeMessage<::zl::proto::networking::NetworkEndPoint>(GetArenaNoVirtual());
    clientendpoint_ = p;
  }
  // @@protoc_insertion_point(field_mutable:zl.proto.networking.ConnectionRequest.ClientEndPoint)
  return clientendpoint_;
}
inline void ConnectionRequest::set_allocated_clientendpoint(::zl::proto::networking::NetworkEndPoint* clientendpoint) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(clientendpoint_);
  }
  if (clientendpoint) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      clientendpoint = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, clientendpoint, submessage_arena);
    }
    
  } else {
    
  }
  clientendpoint_ = clientendpoint;
  // @@protoc_insertion_point(field_set_allocated:zl.proto.networking.ConnectionRequest.ClientEndPoint)
}

// .zl.proto.launcher.ClientDescriptor ClientDescriptor = 2;
inline bool ConnectionRequest::has_clientdescriptor() const {
  return this != internal_default_instance() && clientdescriptor_ != nullptr;
}
inline const ::zl::proto::launcher::ClientDescriptor& ConnectionRequest::clientdescriptor() const {
  const ::zl::proto::launcher::ClientDescriptor* p = clientdescriptor_;
  // @@protoc_insertion_point(field_get:zl.proto.networking.ConnectionRequest.ClientDescriptor)
  return p != nullptr ? *p : *reinterpret_cast<const ::zl::proto::launcher::ClientDescriptor*>(
      &::zl::proto::launcher::_ClientDescriptor_default_instance_);
}
inline ::zl::proto::launcher::ClientDescriptor* ConnectionRequest::release_clientdescriptor() {
  // @@protoc_insertion_point(field_release:zl.proto.networking.ConnectionRequest.ClientDescriptor)
  
  ::zl::proto::launcher::ClientDescriptor* temp = clientdescriptor_;
  clientdescriptor_ = nullptr;
  return temp;
}
inline ::zl::proto::launcher::ClientDescriptor* ConnectionRequest::mutable_clientdescriptor() {
  
  if (clientdescriptor_ == nullptr) {
    auto* p = CreateMaybeMessage<::zl::proto::launcher::ClientDescriptor>(GetArenaNoVirtual());
    clientdescriptor_ = p;
  }
  // @@protoc_insertion_point(field_mutable:zl.proto.networking.ConnectionRequest.ClientDescriptor)
  return clientdescriptor_;
}
inline void ConnectionRequest::set_allocated_clientdescriptor(::zl::proto::launcher::ClientDescriptor* clientdescriptor) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(clientdescriptor_);
  }
  if (clientdescriptor) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      clientdescriptor = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, clientdescriptor, submessage_arena);
    }
    
  } else {
    
  }
  clientdescriptor_ = clientdescriptor;
  // @@protoc_insertion_point(field_set_allocated:zl.proto.networking.ConnectionRequest.ClientDescriptor)
}

// int32 ChannelFlags = 3;
inline void ConnectionRequest::clear_channelflags() {
  channelflags_ = 0;
}
inline ::google::protobuf::int32 ConnectionRequest::channelflags() const {
  // @@protoc_insertion_point(field_get:zl.proto.networking.ConnectionRequest.ChannelFlags)
  return channelflags_;
}
inline void ConnectionRequest::set_channelflags(::google::protobuf::int32 value) {
  
  channelflags_ = value;
  // @@protoc_insertion_point(field_set:zl.proto.networking.ConnectionRequest.ChannelFlags)
}

// -------------------------------------------------------------------

// ConnectionResult

// .zl.proto.networking.ConnectionResult.StatusCode Status = 1;
inline void ConnectionResult::clear_status() {
  status_ = 0;
}
inline ::zl::proto::networking::ConnectionResult_StatusCode ConnectionResult::status() const {
  // @@protoc_insertion_point(field_get:zl.proto.networking.ConnectionResult.Status)
  return static_cast< ::zl::proto::networking::ConnectionResult_StatusCode >(status_);
}
inline void ConnectionResult::set_status(::zl::proto::networking::ConnectionResult_StatusCode value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:zl.proto.networking.ConnectionResult.Status)
}

// -------------------------------------------------------------------

// PingResult

// .zl.proto.networking.PingResult.StatusCode Status = 1;
inline void PingResult::clear_status() {
  status_ = 0;
}
inline ::zl::proto::networking::PingResult_StatusCode PingResult::status() const {
  // @@protoc_insertion_point(field_get:zl.proto.networking.PingResult.Status)
  return static_cast< ::zl::proto::networking::PingResult_StatusCode >(status_);
}
inline void PingResult::set_status(::zl::proto::networking::PingResult_StatusCode value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:zl.proto.networking.PingResult.Status)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace networking
}  // namespace proto
}  // namespace zl

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::zl::proto::networking::ConnectionResult_StatusCode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::zl::proto::networking::ConnectionResult_StatusCode>() {
  return ::zl::proto::networking::ConnectionResult_StatusCode_descriptor();
}
template <> struct is_proto_enum< ::zl::proto::networking::PingResult_StatusCode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::zl::proto::networking::PingResult_StatusCode>() {
  return ::zl::proto::networking::PingResult_StatusCode_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_networking_2fGRPCServer_2eproto
