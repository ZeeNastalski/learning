// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: networking/ReplicatedVariable.proto

#ifndef PROTOBUF_INCLUDED_networking_2fReplicatedVariable_2eproto
#define PROTOBUF_INCLUDED_networking_2fReplicatedVariable_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "networking/NetworkEndPoint.pb.h"
#include <google/protobuf/any.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_networking_2fReplicatedVariable_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_networking_2fReplicatedVariable_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_networking_2fReplicatedVariable_2eproto();
namespace zl {
namespace proto {
namespace networking {
class ReplicatedVariable;
class ReplicatedVariableDefaultTypeInternal;
extern ReplicatedVariableDefaultTypeInternal _ReplicatedVariable_default_instance_;
}  // namespace networking
}  // namespace proto
}  // namespace zl
namespace google {
namespace protobuf {
template<> ::zl::proto::networking::ReplicatedVariable* Arena::CreateMaybeMessage<::zl::proto::networking::ReplicatedVariable>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace zl {
namespace proto {
namespace networking {

// ===================================================================

class ReplicatedVariable final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zl.proto.networking.ReplicatedVariable) */ {
 public:
  ReplicatedVariable();
  virtual ~ReplicatedVariable();

  ReplicatedVariable(const ReplicatedVariable& from);

  inline ReplicatedVariable& operator=(const ReplicatedVariable& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReplicatedVariable(ReplicatedVariable&& from) noexcept
    : ReplicatedVariable() {
    *this = ::std::move(from);
  }

  inline ReplicatedVariable& operator=(ReplicatedVariable&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ReplicatedVariable& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReplicatedVariable* internal_default_instance() {
    return reinterpret_cast<const ReplicatedVariable*>(
               &_ReplicatedVariable_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ReplicatedVariable* other);
  friend void swap(ReplicatedVariable& a, ReplicatedVariable& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReplicatedVariable* New() const final {
    return CreateMaybeMessage<ReplicatedVariable>(nullptr);
  }

  ReplicatedVariable* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReplicatedVariable>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReplicatedVariable& from);
  void MergeFrom(const ReplicatedVariable& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReplicatedVariable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string VariableKey = 2;
  void clear_variablekey();
  static const int kVariableKeyFieldNumber = 2;
  const ::std::string& variablekey() const;
  void set_variablekey(const ::std::string& value);
  #if LANG_CXX11
  void set_variablekey(::std::string&& value);
  #endif
  void set_variablekey(const char* value);
  void set_variablekey(const char* value, size_t size);
  ::std::string* mutable_variablekey();
  ::std::string* release_variablekey();
  void set_allocated_variablekey(::std::string* variablekey);

  // .zl.proto.networking.NetworkEndPoint SenderEndPoint = 1;
  bool has_senderendpoint() const;
  void clear_senderendpoint();
  static const int kSenderEndPointFieldNumber = 1;
  const ::zl::proto::networking::NetworkEndPoint& senderendpoint() const;
  ::zl::proto::networking::NetworkEndPoint* release_senderendpoint();
  ::zl::proto::networking::NetworkEndPoint* mutable_senderendpoint();
  void set_allocated_senderendpoint(::zl::proto::networking::NetworkEndPoint* senderendpoint);

  // .google.protobuf.Any Message = 3;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 3;
  const ::google::protobuf::Any& message() const;
  ::google::protobuf::Any* release_message();
  ::google::protobuf::Any* mutable_message();
  void set_allocated_message(::google::protobuf::Any* message);

  // @@protoc_insertion_point(class_scope:zl.proto.networking.ReplicatedVariable)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr variablekey_;
  ::zl::proto::networking::NetworkEndPoint* senderendpoint_;
  ::google::protobuf::Any* message_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_networking_2fReplicatedVariable_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ReplicatedVariable

// .zl.proto.networking.NetworkEndPoint SenderEndPoint = 1;
inline bool ReplicatedVariable::has_senderendpoint() const {
  return this != internal_default_instance() && senderendpoint_ != nullptr;
}
inline const ::zl::proto::networking::NetworkEndPoint& ReplicatedVariable::senderendpoint() const {
  const ::zl::proto::networking::NetworkEndPoint* p = senderendpoint_;
  // @@protoc_insertion_point(field_get:zl.proto.networking.ReplicatedVariable.SenderEndPoint)
  return p != nullptr ? *p : *reinterpret_cast<const ::zl::proto::networking::NetworkEndPoint*>(
      &::zl::proto::networking::_NetworkEndPoint_default_instance_);
}
inline ::zl::proto::networking::NetworkEndPoint* ReplicatedVariable::release_senderendpoint() {
  // @@protoc_insertion_point(field_release:zl.proto.networking.ReplicatedVariable.SenderEndPoint)
  
  ::zl::proto::networking::NetworkEndPoint* temp = senderendpoint_;
  senderendpoint_ = nullptr;
  return temp;
}
inline ::zl::proto::networking::NetworkEndPoint* ReplicatedVariable::mutable_senderendpoint() {
  
  if (senderendpoint_ == nullptr) {
    auto* p = CreateMaybeMessage<::zl::proto::networking::NetworkEndPoint>(GetArenaNoVirtual());
    senderendpoint_ = p;
  }
  // @@protoc_insertion_point(field_mutable:zl.proto.networking.ReplicatedVariable.SenderEndPoint)
  return senderendpoint_;
}
inline void ReplicatedVariable::set_allocated_senderendpoint(::zl::proto::networking::NetworkEndPoint* senderendpoint) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(senderendpoint_);
  }
  if (senderendpoint) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      senderendpoint = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, senderendpoint, submessage_arena);
    }
    
  } else {
    
  }
  senderendpoint_ = senderendpoint;
  // @@protoc_insertion_point(field_set_allocated:zl.proto.networking.ReplicatedVariable.SenderEndPoint)
}

// string VariableKey = 2;
inline void ReplicatedVariable::clear_variablekey() {
  variablekey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReplicatedVariable::variablekey() const {
  // @@protoc_insertion_point(field_get:zl.proto.networking.ReplicatedVariable.VariableKey)
  return variablekey_.GetNoArena();
}
inline void ReplicatedVariable::set_variablekey(const ::std::string& value) {
  
  variablekey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zl.proto.networking.ReplicatedVariable.VariableKey)
}
#if LANG_CXX11
inline void ReplicatedVariable::set_variablekey(::std::string&& value) {
  
  variablekey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zl.proto.networking.ReplicatedVariable.VariableKey)
}
#endif
inline void ReplicatedVariable::set_variablekey(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  variablekey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zl.proto.networking.ReplicatedVariable.VariableKey)
}
inline void ReplicatedVariable::set_variablekey(const char* value, size_t size) {
  
  variablekey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zl.proto.networking.ReplicatedVariable.VariableKey)
}
inline ::std::string* ReplicatedVariable::mutable_variablekey() {
  
  // @@protoc_insertion_point(field_mutable:zl.proto.networking.ReplicatedVariable.VariableKey)
  return variablekey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReplicatedVariable::release_variablekey() {
  // @@protoc_insertion_point(field_release:zl.proto.networking.ReplicatedVariable.VariableKey)
  
  return variablekey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReplicatedVariable::set_allocated_variablekey(::std::string* variablekey) {
  if (variablekey != nullptr) {
    
  } else {
    
  }
  variablekey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), variablekey);
  // @@protoc_insertion_point(field_set_allocated:zl.proto.networking.ReplicatedVariable.VariableKey)
}

// .google.protobuf.Any Message = 3;
inline bool ReplicatedVariable::has_message() const {
  return this != internal_default_instance() && message_ != nullptr;
}
inline const ::google::protobuf::Any& ReplicatedVariable::message() const {
  const ::google::protobuf::Any* p = message_;
  // @@protoc_insertion_point(field_get:zl.proto.networking.ReplicatedVariable.Message)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Any*>(
      &::google::protobuf::_Any_default_instance_);
}
inline ::google::protobuf::Any* ReplicatedVariable::release_message() {
  // @@protoc_insertion_point(field_release:zl.proto.networking.ReplicatedVariable.Message)
  
  ::google::protobuf::Any* temp = message_;
  message_ = nullptr;
  return temp;
}
inline ::google::protobuf::Any* ReplicatedVariable::mutable_message() {
  
  if (message_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Any>(GetArenaNoVirtual());
    message_ = p;
  }
  // @@protoc_insertion_point(field_mutable:zl.proto.networking.ReplicatedVariable.Message)
  return message_;
}
inline void ReplicatedVariable::set_allocated_message(::google::protobuf::Any* message) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(message_);
  }
  if (message) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      message = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, message, submessage_arena);
    }
    
  } else {
    
  }
  message_ = message;
  // @@protoc_insertion_point(field_set_allocated:zl.proto.networking.ReplicatedVariable.Message)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace networking
}  // namespace proto
}  // namespace zl

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_networking_2fReplicatedVariable_2eproto
