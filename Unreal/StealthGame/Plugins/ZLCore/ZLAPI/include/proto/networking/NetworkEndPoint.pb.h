// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: networking/NetworkEndPoint.proto

#ifndef PROTOBUF_INCLUDED_networking_2fNetworkEndPoint_2eproto
#define PROTOBUF_INCLUDED_networking_2fNetworkEndPoint_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_networking_2fNetworkEndPoint_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_networking_2fNetworkEndPoint_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_networking_2fNetworkEndPoint_2eproto();
namespace zl {
namespace proto {
namespace networking {
class NetworkConnection;
class NetworkConnectionDefaultTypeInternal;
extern NetworkConnectionDefaultTypeInternal _NetworkConnection_default_instance_;
class NetworkEndPoint;
class NetworkEndPointDefaultTypeInternal;
extern NetworkEndPointDefaultTypeInternal _NetworkEndPoint_default_instance_;
}  // namespace networking
}  // namespace proto
}  // namespace zl
namespace google {
namespace protobuf {
template<> ::zl::proto::networking::NetworkConnection* Arena::CreateMaybeMessage<::zl::proto::networking::NetworkConnection>(Arena*);
template<> ::zl::proto::networking::NetworkEndPoint* Arena::CreateMaybeMessage<::zl::proto::networking::NetworkEndPoint>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace zl {
namespace proto {
namespace networking {

// ===================================================================

class NetworkEndPoint final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zl.proto.networking.NetworkEndPoint) */ {
 public:
  NetworkEndPoint();
  virtual ~NetworkEndPoint();

  NetworkEndPoint(const NetworkEndPoint& from);

  inline NetworkEndPoint& operator=(const NetworkEndPoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NetworkEndPoint(NetworkEndPoint&& from) noexcept
    : NetworkEndPoint() {
    *this = ::std::move(from);
  }

  inline NetworkEndPoint& operator=(NetworkEndPoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const NetworkEndPoint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NetworkEndPoint* internal_default_instance() {
    return reinterpret_cast<const NetworkEndPoint*>(
               &_NetworkEndPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(NetworkEndPoint* other);
  friend void swap(NetworkEndPoint& a, NetworkEndPoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NetworkEndPoint* New() const final {
    return CreateMaybeMessage<NetworkEndPoint>(nullptr);
  }

  NetworkEndPoint* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NetworkEndPoint>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NetworkEndPoint& from);
  void MergeFrom(const NetworkEndPoint& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NetworkEndPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string IpAddress = 1;
  void clear_ipaddress();
  static const int kIpAddressFieldNumber = 1;
  const ::std::string& ipaddress() const;
  void set_ipaddress(const ::std::string& value);
  #if LANG_CXX11
  void set_ipaddress(::std::string&& value);
  #endif
  void set_ipaddress(const char* value);
  void set_ipaddress(const char* value, size_t size);
  ::std::string* mutable_ipaddress();
  ::std::string* release_ipaddress();
  void set_allocated_ipaddress(::std::string* ipaddress);

  // int32 Port = 2;
  void clear_port();
  static const int kPortFieldNumber = 2;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:zl.proto.networking.NetworkEndPoint)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ipaddress_;
  ::google::protobuf::int32 port_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_networking_2fNetworkEndPoint_2eproto;
};
// -------------------------------------------------------------------

class NetworkConnection final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zl.proto.networking.NetworkConnection) */ {
 public:
  NetworkConnection();
  virtual ~NetworkConnection();

  NetworkConnection(const NetworkConnection& from);

  inline NetworkConnection& operator=(const NetworkConnection& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NetworkConnection(NetworkConnection&& from) noexcept
    : NetworkConnection() {
    *this = ::std::move(from);
  }

  inline NetworkConnection& operator=(NetworkConnection&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const NetworkConnection& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NetworkConnection* internal_default_instance() {
    return reinterpret_cast<const NetworkConnection*>(
               &_NetworkConnection_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(NetworkConnection* other);
  friend void swap(NetworkConnection& a, NetworkConnection& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NetworkConnection* New() const final {
    return CreateMaybeMessage<NetworkConnection>(nullptr);
  }

  NetworkConnection* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NetworkConnection>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NetworkConnection& from);
  void MergeFrom(const NetworkConnection& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NetworkConnection* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .zl.proto.networking.NetworkEndPoint LocalEndPoiint = 1;
  bool has_localendpoiint() const;
  void clear_localendpoiint();
  static const int kLocalEndPoiintFieldNumber = 1;
  const ::zl::proto::networking::NetworkEndPoint& localendpoiint() const;
  ::zl::proto::networking::NetworkEndPoint* release_localendpoiint();
  ::zl::proto::networking::NetworkEndPoint* mutable_localendpoiint();
  void set_allocated_localendpoiint(::zl::proto::networking::NetworkEndPoint* localendpoiint);

  // .zl.proto.networking.NetworkEndPoint RemoteEndPoint = 2;
  bool has_remoteendpoint() const;
  void clear_remoteendpoint();
  static const int kRemoteEndPointFieldNumber = 2;
  const ::zl::proto::networking::NetworkEndPoint& remoteendpoint() const;
  ::zl::proto::networking::NetworkEndPoint* release_remoteendpoint();
  ::zl::proto::networking::NetworkEndPoint* mutable_remoteendpoint();
  void set_allocated_remoteendpoint(::zl::proto::networking::NetworkEndPoint* remoteendpoint);

  // @@protoc_insertion_point(class_scope:zl.proto.networking.NetworkConnection)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::zl::proto::networking::NetworkEndPoint* localendpoiint_;
  ::zl::proto::networking::NetworkEndPoint* remoteendpoint_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_networking_2fNetworkEndPoint_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// NetworkEndPoint

// string IpAddress = 1;
inline void NetworkEndPoint::clear_ipaddress() {
  ipaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NetworkEndPoint::ipaddress() const {
  // @@protoc_insertion_point(field_get:zl.proto.networking.NetworkEndPoint.IpAddress)
  return ipaddress_.GetNoArena();
}
inline void NetworkEndPoint::set_ipaddress(const ::std::string& value) {
  
  ipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zl.proto.networking.NetworkEndPoint.IpAddress)
}
#if LANG_CXX11
inline void NetworkEndPoint::set_ipaddress(::std::string&& value) {
  
  ipaddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zl.proto.networking.NetworkEndPoint.IpAddress)
}
#endif
inline void NetworkEndPoint::set_ipaddress(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  ipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zl.proto.networking.NetworkEndPoint.IpAddress)
}
inline void NetworkEndPoint::set_ipaddress(const char* value, size_t size) {
  
  ipaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zl.proto.networking.NetworkEndPoint.IpAddress)
}
inline ::std::string* NetworkEndPoint::mutable_ipaddress() {
  
  // @@protoc_insertion_point(field_mutable:zl.proto.networking.NetworkEndPoint.IpAddress)
  return ipaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NetworkEndPoint::release_ipaddress() {
  // @@protoc_insertion_point(field_release:zl.proto.networking.NetworkEndPoint.IpAddress)
  
  return ipaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NetworkEndPoint::set_allocated_ipaddress(::std::string* ipaddress) {
  if (ipaddress != nullptr) {
    
  } else {
    
  }
  ipaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ipaddress);
  // @@protoc_insertion_point(field_set_allocated:zl.proto.networking.NetworkEndPoint.IpAddress)
}

// int32 Port = 2;
inline void NetworkEndPoint::clear_port() {
  port_ = 0;
}
inline ::google::protobuf::int32 NetworkEndPoint::port() const {
  // @@protoc_insertion_point(field_get:zl.proto.networking.NetworkEndPoint.Port)
  return port_;
}
inline void NetworkEndPoint::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:zl.proto.networking.NetworkEndPoint.Port)
}

// -------------------------------------------------------------------

// NetworkConnection

// .zl.proto.networking.NetworkEndPoint LocalEndPoiint = 1;
inline bool NetworkConnection::has_localendpoiint() const {
  return this != internal_default_instance() && localendpoiint_ != nullptr;
}
inline void NetworkConnection::clear_localendpoiint() {
  if (GetArenaNoVirtual() == nullptr && localendpoiint_ != nullptr) {
    delete localendpoiint_;
  }
  localendpoiint_ = nullptr;
}
inline const ::zl::proto::networking::NetworkEndPoint& NetworkConnection::localendpoiint() const {
  const ::zl::proto::networking::NetworkEndPoint* p = localendpoiint_;
  // @@protoc_insertion_point(field_get:zl.proto.networking.NetworkConnection.LocalEndPoiint)
  return p != nullptr ? *p : *reinterpret_cast<const ::zl::proto::networking::NetworkEndPoint*>(
      &::zl::proto::networking::_NetworkEndPoint_default_instance_);
}
inline ::zl::proto::networking::NetworkEndPoint* NetworkConnection::release_localendpoiint() {
  // @@protoc_insertion_point(field_release:zl.proto.networking.NetworkConnection.LocalEndPoiint)
  
  ::zl::proto::networking::NetworkEndPoint* temp = localendpoiint_;
  localendpoiint_ = nullptr;
  return temp;
}
inline ::zl::proto::networking::NetworkEndPoint* NetworkConnection::mutable_localendpoiint() {
  
  if (localendpoiint_ == nullptr) {
    auto* p = CreateMaybeMessage<::zl::proto::networking::NetworkEndPoint>(GetArenaNoVirtual());
    localendpoiint_ = p;
  }
  // @@protoc_insertion_point(field_mutable:zl.proto.networking.NetworkConnection.LocalEndPoiint)
  return localendpoiint_;
}
inline void NetworkConnection::set_allocated_localendpoiint(::zl::proto::networking::NetworkEndPoint* localendpoiint) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete localendpoiint_;
  }
  if (localendpoiint) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      localendpoiint = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, localendpoiint, submessage_arena);
    }
    
  } else {
    
  }
  localendpoiint_ = localendpoiint;
  // @@protoc_insertion_point(field_set_allocated:zl.proto.networking.NetworkConnection.LocalEndPoiint)
}

// .zl.proto.networking.NetworkEndPoint RemoteEndPoint = 2;
inline bool NetworkConnection::has_remoteendpoint() const {
  return this != internal_default_instance() && remoteendpoint_ != nullptr;
}
inline void NetworkConnection::clear_remoteendpoint() {
  if (GetArenaNoVirtual() == nullptr && remoteendpoint_ != nullptr) {
    delete remoteendpoint_;
  }
  remoteendpoint_ = nullptr;
}
inline const ::zl::proto::networking::NetworkEndPoint& NetworkConnection::remoteendpoint() const {
  const ::zl::proto::networking::NetworkEndPoint* p = remoteendpoint_;
  // @@protoc_insertion_point(field_get:zl.proto.networking.NetworkConnection.RemoteEndPoint)
  return p != nullptr ? *p : *reinterpret_cast<const ::zl::proto::networking::NetworkEndPoint*>(
      &::zl::proto::networking::_NetworkEndPoint_default_instance_);
}
inline ::zl::proto::networking::NetworkEndPoint* NetworkConnection::release_remoteendpoint() {
  // @@protoc_insertion_point(field_release:zl.proto.networking.NetworkConnection.RemoteEndPoint)
  
  ::zl::proto::networking::NetworkEndPoint* temp = remoteendpoint_;
  remoteendpoint_ = nullptr;
  return temp;
}
inline ::zl::proto::networking::NetworkEndPoint* NetworkConnection::mutable_remoteendpoint() {
  
  if (remoteendpoint_ == nullptr) {
    auto* p = CreateMaybeMessage<::zl::proto::networking::NetworkEndPoint>(GetArenaNoVirtual());
    remoteendpoint_ = p;
  }
  // @@protoc_insertion_point(field_mutable:zl.proto.networking.NetworkConnection.RemoteEndPoint)
  return remoteendpoint_;
}
inline void NetworkConnection::set_allocated_remoteendpoint(::zl::proto::networking::NetworkEndPoint* remoteendpoint) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete remoteendpoint_;
  }
  if (remoteendpoint) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      remoteendpoint = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, remoteendpoint, submessage_arena);
    }
    
  } else {
    
  }
  remoteendpoint_ = remoteendpoint;
  // @@protoc_insertion_point(field_set_allocated:zl.proto.networking.NetworkConnection.RemoteEndPoint)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace networking
}  // namespace proto
}  // namespace zl

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_networking_2fNetworkEndPoint_2eproto
